exports[`TodoForm Component renders correctly 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <TodoForm
    currentTodo=""
    handleOnchangeInput={[Function]}
    handleSubmit={[Function]}
  />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "host",
    "props": Object {
      "children": Array [
        <p>
          Enter your todo and hit the Enter key 
        </p>,
        <form
          onSubmit={[Function]}
        >
          <styled.input
            onChange={[Function]}
            placeholder="Enter new todo"
            value=""
          />
        </form>,
      ],
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": "Enter your todo and hit the Enter key ",
        },
        "ref": null,
        "rendered": "Enter your todo and hit the Enter key ",
        "type": "p",
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": <styled.input
            onChange={[Function]}
            placeholder="Enter new todo"
            value=""
          />,
          "onSubmit": [Function],
        },
        "ref": null,
        "rendered": Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "onChange": [Function],
            "placeholder": "Enter new todo",
            "value": "",
          },
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
        "type": "form",
      },
    ],
    "type": "div",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": Array [
          <p>
            Enter your todo and hit the Enter key 
          </p>,
          <form
            onSubmit={[Function]}
          >
            <styled.input
              onChange={[Function]}
              placeholder="Enter new todo"
              value=""
            />
          </form>,
        ],
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": "Enter your todo and hit the Enter key ",
          },
          "ref": null,
          "rendered": "Enter your todo and hit the Enter key ",
          "type": "p",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": <styled.input
              onChange={[Function]}
              placeholder="Enter new todo"
              value=""
            />,
            "onSubmit": [Function],
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "onChange": [Function],
              "placeholder": "Enter new todo",
              "value": "",
            },
            "ref": null,
            "rendered": null,
            "type": [Function],
          },
          "type": "form",
        },
      ],
      "type": "div",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getDerivedStateFromProps": true,
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
  },
}
`;